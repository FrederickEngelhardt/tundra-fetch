{"version":3,"sources":["../../src/submitRequest.js"],"names":["capturedRequest","port","matched","request","XMLHttpRequest","requestUrl","open","setRequestHeader","send","JSON","stringify"],"mappings":";;;;;;;;;qEAAe,iBAAOA,eAAP,EAAwBC,IAAxB;AAAA,QAA8BC,OAA9B,uEAAwC,IAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AACb;AACA;AACMC,mBAHO,GAGG,IAAIC,cAAJ,EAHH,EAGyB;;AAChCC,sBAJO,yBAI0BJ,IAJ1B,UAIkCC,UAAU,UAAV,GAAuB,yBAJzD;;;AAMbC,oBAAQG,IAAR,CAAa,MAAb,EAAqBD,UAArB;AACAF,oBAAQI,gBAAR,CAAyB,cAAzB,EAAyC,kBAAzC;AACAJ,oBAAQK,IAAR,CAAaC,KAAKC,SAAL,CAAeV,eAAf,CAAb;;AARa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G","file":"submitRequest.js","sourcesContent":["export default async (capturedRequest, port, matched = true) => {\n  // Using XMLHttpRequest to not interfere with the overwritten fetch object.\n  // Sending in a fire-and-forget fashion.\n  const request = new XMLHttpRequest(); // eslint-disable-line no-undef\n  const requestUrl = `http://localhost:${port}/${matched ? 'requests' : 'requests/type/unmatched'}`;\n\n  request.open('POST', requestUrl);\n  request.setRequestHeader('Content-Type', 'application/json');\n  request.send(JSON.stringify(capturedRequest));\n};\n"]}