{"version":3,"sources":["../../src/fetchMockConfigBuilder.js"],"names":["request","config","repeatMap","baseConfig","name","overwriteRoutes","repeatMode","toUpperCase","invocations","repeated","repeat"],"mappings":";;;;;;AAAA;;;;;;kBAEe,UAACA,OAAD,EAAUC,MAAV,EAAkBC,SAAlB,EAAgC;AAC7C,MAAMC,aAAa;AACjBC,UAAM,gCAAeJ,OAAf,CADW;AAEjBK,qBAAiB;AAFA,GAAnB;;AAKA,MAAMC,aAAaL,UAAUA,OAAOK,UAAjB,IAA+BL,OAAOK,UAAP,CAAkBC,WAAlB,EAAlD;;AAEA,MAAID,eAAe,OAAnB,EAA4B;AAC1B,WAAOH,UAAP;AACD;;AAV4C,8BAYXD,UAAU,gCAAeF,OAAf,CAAV,CAZW;AAAA,MAYrCQ,WAZqC,yBAYrCA,WAZqC;AAAA,MAYxBC,QAZwB,yBAYxBA,QAZwB;;;AAc7C,MAAID,eAAeC,QAAnB,EAA6B;AAC3B,QAAIH,eAAe,MAAnB,EAA2B;AACzB,aAAOH,UAAP;AACD;AACF;;AAEDA,aAAWO,MAAX,GAAoB,CAApB;;AAEA,SAAOP,UAAP;AACD,C","file":"fetchMockConfigBuilder.js","sourcesContent":["import buildRequestId from './requestIdBuilder';\n\nexport default (request, config, repeatMap) => {\n  const baseConfig = {\n    name: buildRequestId(request),\n    overwriteRoutes: false,\n  };\n\n  const repeatMode = config && config.repeatMode && config.repeatMode.toUpperCase();\n\n  if (repeatMode === 'FIRST') {\n    return baseConfig;\n  }\n\n  const { invocations, repeated } = repeatMap[buildRequestId(request)];\n\n  if (invocations >= repeated) {\n    if (repeatMode === 'LAST') {\n      return baseConfig;\n    }\n  }\n\n  baseConfig.repeat = 1;\n\n  return baseConfig;\n};\n"]}