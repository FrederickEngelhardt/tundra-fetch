{"version":3,"sources":["../../src/stringSimilarity.js"],"names":["WILDCARD_MARKER_ESCAPED","source","target","wildcardedSource","replace","RegExp","isMatch"],"mappings":";;;;;;;AAAA;;;;AACA;;;;;;AAEO,IAAMA,4DAA0B,SAAhC;;kBAEQ,UAACC,MAAD,EAASC,MAAT,EAAoB;AACjC,MAAI,CAACD,MAAD,IAAW,CAACA,UAAU,EAAX,OAAoBC,UAAU,EAA9B,CAAf,EAAkD;AAChD,WAAOD,WAAWC,MAAlB;AACD;;AAED,MAAMC,mBAAmBF,OACtBG,OADsB,CACd,IAAIC,MAAJ,CAAW,sBAAa,GAAb,CAAX,EAA8B,GAA9B,CADc,EACsB,KADtB,EAEtBD,OAFsB,CAEd,IAAIC,MAAJ,CAAW,sBAAaL,uBAAb,CAAX,EAAkD,GAAlD,CAFc,EAE0C,GAF1C,CAAzB;;AAIA,SAAO,kBAAQM,OAAR,CAAgBJ,MAAhB,EAAwBC,gBAAxB,CAAP;AACD,C","file":"stringSimilarity.js","sourcesContent":["import escapeRegExp from 'lodash.escaperegexp';\nimport matcher from 'matcher';\n\nexport const WILDCARD_MARKER_ESCAPED = '{{\\\\*}}';\n\nexport default (source, target) => {\n  if (!source || (source || '') === (target || '')) {\n    return source === target;\n  }\n\n  const wildcardedSource = source\n    .replace(new RegExp(escapeRegExp('*'), 'g'), '\\\\*')\n    .replace(new RegExp(escapeRegExp(WILDCARD_MARKER_ESCAPED), 'g'), '*');\n\n  return matcher.isMatch(target, wildcardedSource);\n};\n"]}