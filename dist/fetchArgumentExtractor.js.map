{"version":3,"sources":["../fetchArgumentExtractor.js"],"names":["fetchParams","length","isString","url","config","method","isObject","Error","value","String","Object"],"mappings":";;;;;;;;kBAIe,UAAUA,WAAV,EAAuB;AACpC,MAAIA,eAAeA,YAAYC,MAAZ,KAAuB,CAA1C,EAA6C;AAC3C;AACA,QAAIC,SAASF,YAAY,CAAZ,CAAT,CAAJ,EAA8B;AAC5B,aAAO;AACLG,aAAKH,YAAY,CAAZ,CADA;AAELI,gBAAQ;AACNC,kBAAQ;AADF;AAFH,OAAP;AAMD;AACD;AACA,QAAIC,SAASN,YAAY,CAAZ,CAAT,CAAJ,EAA8B;AAC5B,aAAO;AACLG,aAAKH,YAAY,CAAZ,EAAeG,GADf;AAELC,gBAAQJ,YAAY,CAAZ;AAFH,OAAP;AAID;AACF;;AAED,MAAIA,eAAeA,YAAYC,MAAZ,KAAuB,CAA1C,EAA6C;AAC3C;AACA,QAAIC,SAASF,YAAY,CAAZ,CAAT,KAA4BM,SAASN,YAAY,CAAZ,CAAT,CAAhC,EAA0D;AACxD,aAAO;AACLG,aAAKH,YAAY,CAAZ,CADA;AAELI,gBAAQJ,YAAY,CAAZ;AAFH,OAAP;AAID;AACF;;AAED,QAAMO,iDAA+CP,WAA/C,CAAN;AACD,C;;AAnCD,IAAME,WAAW,SAAXA,QAAW;AAAA,SAAS,OAAOM,KAAP,KAAiB,QAAjB,IAA6BA,iBAAiBC,MAAvD;AAAA,CAAjB;;AAEA,IAAMH,WAAW,SAAXA,QAAW;AAAA,SAAS,QAAOE,KAAP,yCAAOA,KAAP,OAAiB,QAAjB,IAA6BA,iBAAiBE,MAAvD;AAAA,CAAjB","file":"fetchArgumentExtractor.js","sourcesContent":["const isString = value => typeof value === 'string' || value instanceof String;\n\nconst isObject = value => typeof value === 'object' || value instanceof Object;\n\nexport default function (fetchParams) {\n  if (fetchParams && fetchParams.length === 1) {\n    // Scenario: fetch('url')\n    if (isString(fetchParams[0])) {\n      return {\n        url: fetchParams[0],\n        config: {\n          method: 'GET',\n        },\n      };\n    }\n    // Scenario: fetch({ url: 'url', method: 'GET' })\n    if (isObject(fetchParams[0])) {\n      return {\n        url: fetchParams[0].url,\n        config: fetchParams[0],\n      };\n    }\n  }\n\n  if (fetchParams && fetchParams.length === 2) {\n    // Scenario: fetch('url', { method: 'GET' })\n    if (isString(fetchParams[0]) && isObject(fetchParams[1])) {\n      return {\n        url: fetchParams[0],\n        config: fetchParams[1],\n      };\n    }\n  }\n\n  throw Error(`Unknown fetch argument configuration: ${fetchParams}`);\n}\n"]}