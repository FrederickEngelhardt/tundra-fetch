{"version":3,"sources":["../stringSimilarity.js"],"names":["WILDCARD_MARKER_ESCAPED","source","target","wildcardedSource","replace","RegExp","isMatch"],"mappings":";;;;;;AAAA;;;;AACA;;;;;;AAEA,IAAMA,0BAA0B,SAAhC;;kBAEe,UAACC,MAAD,EAASC,MAAT,EAAoB;AACjC,MAAID,UAAUC,MAAd,EAAsB;AACpB,QAAMC,mBAAmBF,OACtBG,OADsB,CACd,IAAIC,MAAJ,CAAW,sBAAa,GAAb,CAAX,EAA8B,GAA9B,CADc,EACsB,KADtB,EAEtBD,OAFsB,CAEd,IAAIC,MAAJ,CAAW,sBAAaL,uBAAb,CAAX,EAAkD,GAAlD,CAFc,EAE0C,GAF1C,CAAzB;;AAIA,WAAO,kBAAQM,OAAR,CAAgBJ,MAAhB,EAAwBC,gBAAxB,CAAP;AACD;;AAED,SAAOF,WAAWC,MAAlB;AACD,C","file":"stringSimilarity.js","sourcesContent":["import escapeRegExp from 'lodash.escaperegexp';\nimport matcher from 'matcher';\n\nconst WILDCARD_MARKER_ESCAPED = '{{\\\\*}}';\n\nexport default (source, target) => {\n  if (source && target) {\n    const wildcardedSource = source\n      .replace(new RegExp(escapeRegExp('*'), 'g'), '\\\\*')\n      .replace(new RegExp(escapeRegExp(WILDCARD_MARKER_ESCAPED), 'g'), '*');\n\n    return matcher.isMatch(target, wildcardedSource);\n  }\n\n  return source === target;\n};\n"]}